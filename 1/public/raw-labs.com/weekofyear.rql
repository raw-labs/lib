//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied
// See the License for the specific language governing permissions and
// limitations under the License.
//

weekday(d:date) := {
    dd:=day(d);
    mm:=month(d)
    yy:=year(d);
    off:= [ (m:1,v:0),
            (m:2,v:3),
            (m:3,v:3),
            (m:4,v:6),
            (m:5,v:1),
            (m:6,v:4),
            (m:7,v:6),
            (m:8,v:2),
            (m:9,v:5),
            (m:10,v:0),
            (m:11,v:3),
            (m:12,v:5) ];
            
   (dd + (yy-1900)+ ((yy-1900)/4)+cfirst(select v from off where m=mm))%7

};

dayofyear(d: date) : int := {

cast( (cast((unix_timestamp(to_timestamp(cast(d as string)+" 0:0", "yyyy-MM-dd H:m" )) -
unix_timestamp(to_timestamp(cast(year(d) as string)+"-01-01 0:0","yyyy-MM-dd H:m"))) as double)/ 60.0 / 60.0 / 24.0) + 1 as int)

};

//
// returns the week of the year for date
// 1-52
weekofyear(d: date) := {
    doy:=dayofyear(d);
    dow:=weekday(d);
    dow1:=weekday(to_date(cast(year(d) as string)+"-01-01","yyy-MM-dd"));
    week:=(doy/7)+1;
    if dow<dow1 then week+1 else week
};
