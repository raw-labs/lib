//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied
// See the License for the specific language governing permissions and
// limitations under the License.
//

//
// https://api.cloudflare.com/#workers-kv-namespace-write-key-value-pair
//

typealias response := record(
    success: bool
);

putvalue(   x_auth_key: string, 
            x_auth_email: string,
            account_id: string,
            namespace: string,
            key: string,
            value: string,
            expiration: int null := null,
            expiration_ttl: int null := null ) := {
    read_json[response](  "https://api.cloudflare.com/client/v4/accounts/"+account_id+"/storage/kv/namespaces/"+namespace+"/values/"+key,
                    http_method:= "put",
                    http_headers:=[
                                ("X-Auth-Email",x_auth_email),
                                ("X-Auth-Key", x_auth_key),
                                ("Content-Type", "text/plain")
                            ],
                    http_args := [
                                ("expiration", cast( expiration as string) ),
                                ("expiration_ttl", cast( expiration_ttl as string) )
                            ],
                    http_body_string := value
                        )
};

// because of an inliner problem, we use read_lines(not inlined) rather than read_json 
// https://api.cloudflare.com/#workers-kv-namespace-read-key-value-pair
// returns a list of strings containing the value if existing

getvalues(  x_auth_key: string, 
            x_auth_email: string,
            account_id: string,
            namespace: string,
            key: string) := {
        read_lines(  "https://api.cloudflare.com/client/v4/accounts/"+account_id+"/storage/kv/namespaces/"+namespace+"/values/"+key,
                    http_headers:=[
                            ("X-Auth-Email",x_auth_email),
                            ("X-Auth-Key", x_auth_key)
                        ]
        )
};

//
// https://api.cloudflare.com/#workers-kv-namespace-list-a-namespace-s-keys
// Returns a collection of strings containing all key values from a Namespace
// up to 1.000 by default
//

typealias response_list_namespace_keys := record(
    success: bool,
    result: collection(record(
        name: string,
        expiration: int null,
        metadata: record() null
    )),
    result_info: record(
        count: int,
        cursor: string
    )
);

list_namespace_keys(    x_auth_key: string, 
                        x_auth_email: string,
                        account_id: string,
                        namespace: string,
                        `limit`: int null := null,
                        cursor: string null := null,
                        prefix: string null := null) := {

    res := read_json[response_list_namespace_keys](  "https://api.cloudflare.com/client/v4/accounts/"+account_id+"/storage/kv/namespaces/"+namespace+"/keys",
                    http_method:= "get",
                    http_args:=[
                        ("limit", cast(`limit` as string)),
                        ("cursor",cursor),
                        ("prefix",prefix)
                    ],
                    http_headers:=[
                                ("X-Auth-Email",x_auth_email),
                                ("X-Auth-Key", x_auth_key),
                                ("Content-Type", "application/javascript")
                            ]
                    )
    select name from res.result
};

//
// https://api.cloudflare.com/#workers-kv-namespace-delete-key-value-pair
// 

deletevalue(    x_auth_key: string, 
                x_auth_email: string,
                account_id: string,
                namespace: string,
                key: string) := {
                    read_json[response](  "https://api.cloudflare.com/client/v4/accounts/"+account_id+"/storage/kv/namespaces/"+namespace+"/values/"+key,
                        http_method:= "delete",
                        http_headers:=[
                                    ("X-Auth-Email",x_auth_email),
                                    ("X-Auth-Key", x_auth_key)
                                ]
                    )
};

